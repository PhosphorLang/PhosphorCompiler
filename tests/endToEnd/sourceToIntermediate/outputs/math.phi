function Math.testUnaryPlus (Native): Native
{
    introduce v#0
    take v#0 p#0
    introduce v#1
    move v#1 v#0
    give r#0 v#1
    return
}

function Math.testUnaryMinus (Native): Native
{
    introduce v#2
    take v#2 p#0
    introduce v#3
    move v#3 v#2
    negate v#3
    give r#0 v#3
    return
}

function Math.testAddition (Native, Native): Native
{
    introduce v#4
    take v#4 p#0
    introduce v#5
    take v#5 p#1
    introduce v#6
    move v#6 v#4
    introduce v#7
    move v#7 v#5
    add v#6 v#7
    give r#0 v#6
    return
}

function Math.testSubtraction (Native, Native): Native
{
    introduce v#8
    take v#8 p#0
    introduce v#9
    take v#9 p#1
    introduce v#10
    move v#10 v#8
    introduce v#11
    move v#11 v#9
    subtract v#10 v#11
    give r#0 v#10
    return
}

function Math.testMultiplication (Native, Native): Native
{
    introduce v#12
    take v#12 p#0
    introduce v#13
    take v#13 p#1
    introduce v#14
    move v#14 v#12
    introduce v#15
    move v#15 v#13
    multiply v#14 v#15
    give r#0 v#14
    return
}

function Math.testDivision (Native, Native): Native
{
    introduce v#16
    take v#16 p#0
    introduce v#17
    take v#17 p#1
    introduce v#18
    move v#18 v#16
    introduce v#19
    move v#19 v#17
    divide v#18 v#19
    give r#0 v#18
    return
}

function Math.testModulo (Native, Native): Native
{
    introduce v#20
    take v#20 p#0
    introduce v#21
    take v#21 p#1
    introduce v#22
    move v#22 v#20
    introduce v#23
    move v#23 v#21
    modulo v#22 v#23
    give r#0 v#22
    return
}

function Math.main (): Void
{
    introduce v#24
    move v#24 Native(1)
    give p#0 v#24
    call Math.testUnaryMinus
    introduce v#25
    move v#25 Native(1)
    give p#0 v#25
    call Math.testUnaryPlus
    introduce v#26
    move v#26 Native(1)
    give p#0 v#26
    introduce v#27
    move v#27 Native(2)
    give p#1 v#27
    call Math.testAddition
    introduce v#28
    move v#28 Native(1)
    give p#0 v#28
    introduce v#29
    move v#29 Native(2)
    give p#1 v#29
    call Math.testSubtraction
    introduce v#30
    move v#30 Native(1)
    give p#0 v#30
    introduce v#31
    move v#31 Native(2)
    give p#1 v#31
    call Math.testMultiplication
    introduce v#32
    move v#32 Native(3)
    give p#0 v#32
    introduce v#33
    move v#33 Native(2)
    give p#1 v#33
    call Math.testDivision
    introduce v#34
    move v#34 Native(3)
    give p#0 v#34
    introduce v#35
    move v#35 Native(2)
    give p#1 v#35
    call Math.testModulo
    return
}
